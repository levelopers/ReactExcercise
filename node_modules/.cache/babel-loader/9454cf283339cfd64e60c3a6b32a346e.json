{"ast":null,"code":"var filter = function filter(target, type) {\n  var filterByName = function filterByName(inputName) {\n    var result = [];\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = target[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var person = _step.value;\n        if (person && !(person[\"firstName\"] && person[\"lastName\"])) return;\n\n        if (person[\"firstName\"].concat(person[\"lastName\"]).toUpperCase().indexOf(inputName.toUpperCase()) !== -1) {\n          result.push(person);\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    return result;\n  };\n\n  var filterByTag = function filterByTag(inputTag) {\n    var result = new Set();\n    if (!inputTag) return target;\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = target[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var person = _step2.value;\n        if (person && !person[\"tags\"]) continue;\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n          for (var _iterator3 = person[\"tags\"][Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var tag = _step3.value;\n\n            if (tag.indexOf(inputTag) !== -1) {\n              result.add(person);\n            }\n          }\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n              _iterator3.return();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n          _iterator2.return();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n\n    return Array.from(result);\n  };\n\n  switch (type) {\n    case \"name\":\n      return filterByName;\n\n    case \"tag\":\n      return filterByTag;\n  }\n};\n\nexport default filter;","map":{"version":3,"sources":["/Users/notBob/Desktop/hatchways/frontend-assessment/src/modules/filter/index.js"],"names":["filter","target","type","filterByName","inputName","result","person","concat","toUpperCase","indexOf","push","filterByTag","inputTag","Set","tag","add","Array","from"],"mappings":"AACA,IAAMA,MAAM,GAAG,SAATA,MAAS,CAACC,MAAD,EAASC,IAAT,EAAkB;AAC/B,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,SAAD,EAAe;AAClC,QAAIC,MAAM,GAAG,EAAb;AADkC;AAAA;AAAA;;AAAA;AAElC,2BAAqBJ,MAArB,8HAA6B;AAAA,YAAlBK,MAAkB;AAC3B,YAAIA,MAAM,IAAI,EAAEA,MAAM,CAAC,WAAD,CAAN,IAAuBA,MAAM,CAAC,UAAD,CAA/B,CAAd,EAA4D;;AAC5D,YAAIA,MAAM,CAAC,WAAD,CAAN,CAAoBC,MAApB,CAA2BD,MAAM,CAAC,UAAD,CAAjC,EAA+CE,WAA/C,GACDC,OADC,CACOL,SAAS,CAACI,WAAV,EADP,MACoC,CAAC,CADzC,EAC4C;AAC1CH,UAAAA,MAAM,CAACK,IAAP,CAAYJ,MAAZ;AACD;AACF;AARiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASlC,WAAOD,MAAP;AACD,GAVD;;AAWA,MAAMM,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAc;AAChC,QAAIP,MAAM,GAAG,IAAIQ,GAAJ,EAAb;AACA,QAAI,CAACD,QAAL,EAAe,OAAOX,MAAP;AAFiB;AAAA;AAAA;;AAAA;AAGhC,4BAAqBA,MAArB,mIAA6B;AAAA,YAAlBK,MAAkB;AAC3B,YAAIA,MAAM,IAAI,CAACA,MAAM,CAAC,MAAD,CAArB,EAA+B;AADJ;AAAA;AAAA;;AAAA;AAE3B,gCAAkBA,MAAM,CAAC,MAAD,CAAxB,mIAAkC;AAAA,gBAAvBQ,GAAuB;;AAChC,gBAAIA,GAAG,CAACL,OAAJ,CAAYG,QAAZ,MAA0B,CAAC,CAA/B,EAAkC;AAChCP,cAAAA,MAAM,CAACU,GAAP,CAAWT,MAAX;AACD;AACF;AAN0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAO5B;AAV+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWhC,WAAOU,KAAK,CAACC,IAAN,CAAWZ,MAAX,CAAP;AACD,GAZD;;AAaA,UAAQH,IAAR;AACE,SAAK,MAAL;AACE,aAAOC,YAAP;;AACF,SAAK,KAAL;AACE,aAAOQ,WAAP;AAJJ;AAMD,CA/BD;;AAiCA,eAAeX,MAAf","sourcesContent":["\nconst filter = (target, type) => {\n  const filterByName = (inputName) => {\n    let result = []\n    for (const person of target) {\n      if (person && !(person[\"firstName\"] && person[\"lastName\"])) return\n      if (person[\"firstName\"].concat(person[\"lastName\"]).toUpperCase()\n        .indexOf(inputName.toUpperCase()) !== -1) {\n        result.push(person)\n      }\n    }\n    return result\n  }\n  const filterByTag = (inputTag) => {\n    let result = new Set()\n    if (!inputTag) return target\n    for (const person of target) {\n      if (person && !person[\"tags\"]) continue;\n      for (const tag of person[\"tags\"]) {\n        if (tag.indexOf(inputTag) !== -1) {\n          result.add(person)\n        }\n      }\n    }\n    return Array.from(result)\n  }\n  switch (type) {\n    case \"name\":\n      return filterByName;\n    case \"tag\":\n      return filterByTag;\n  }\n}\n\nexport default filter"]},"metadata":{},"sourceType":"module"}