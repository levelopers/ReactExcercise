{"ast":null,"code":"var average = function average(grades) {\n  if (Object.prototype.toString.call(grades).slice(8, -1) !== \"Array\") return null;\n  var sum = 0;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = grades[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var score = _step.value;\n      sum += Number(score);\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return sum / grades.length;\n};\n\nexport default average;","map":{"version":3,"sources":["/Users/notBob/Desktop/hatchways/frontend-assessment/src/modules/AverageGrades/index.js"],"names":["average","grades","Object","prototype","toString","call","slice","sum","score","Number","length"],"mappings":"AACA,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAACC,MAAD,EAAY;AAC1B,MAAIC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,MAA/B,EAAuCK,KAAvC,CAA6C,CAA7C,EAAgD,CAAC,CAAjD,MAAwD,OAA5D,EAAqE,OAAO,IAAP;AACrE,MAAIC,GAAG,GAAG,CAAV;AAF0B;AAAA;AAAA;;AAAA;AAG1B,yBAAkBN,MAAlB,8HAA0B;AAAA,UAAjBO,KAAiB;AACxBD,MAAAA,GAAG,IAAIE,MAAM,CAACD,KAAD,CAAb;AACD;AALyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAM1B,SAAOD,GAAG,GAAGN,MAAM,CAACS,MAApB;AACD,CAPD;;AASA,eAAeV,OAAf","sourcesContent":["\nconst average = (grades) => {\n  if (Object.prototype.toString.call(grades).slice(8, -1) !== \"Array\") return null\n  let sum = 0\n  for (let score of grades) {\n    sum += Number(score)\n  }\n  return sum / grades.length\n}\n\nexport default average"]},"metadata":{},"sourceType":"module"}