{"ast":null,"code":"var filter = function filter(target, type) {\n  var filterByName = function filterByName(inputName) {\n    var result = [];\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = target[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var person = _step.value;\n        if (person && !(person[\"firstName\"] && person[\"lastName\"])) return;\n\n        if (person[\"firstName\"].concat(person[\"lastName\"]).toUpperCase().indexOf(inputName.toUpperCase()) !== -1) {\n          result.push(person);\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    return result;\n  };\n\n  var filterByTag = function filterByTag(inputTag) {\n    var result = [];\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = target[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var person = _step2.value;\n        if (person && !person[\"tag\"]) return;\n\n        if (person[\"tag\"].indexOf(inputTag) !== -1) {\n          result.push(person);\n        }\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n          _iterator2.return();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n\n    return result;\n  };\n\n  switch (type) {\n    case \"name\":\n      return filterByName;\n\n    case \"tag\":\n      return filterByTag;\n  }\n};\n\nexport default filter;","map":{"version":3,"sources":["/Users/notBob/Desktop/hatchways/frontend-assessment/src/modules/filter/index.js"],"names":["filter","target","type","filterByName","inputName","result","person","concat","toUpperCase","indexOf","push","filterByTag","inputTag"],"mappings":"AACA,IAAMA,MAAM,GAAG,SAATA,MAAS,CAACC,MAAD,EAASC,IAAT,EAAkB;AAC/B,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,SAAD,EAAe;AAClC,QAAIC,MAAM,GAAG,EAAb;AADkC;AAAA;AAAA;;AAAA;AAElC,2BAAqBJ,MAArB,8HAA6B;AAAA,YAAlBK,MAAkB;AAC3B,YAAGA,MAAM,IAAG,EAAEA,MAAM,CAAC,WAAD,CAAN,IAAuBA,MAAM,CAAC,UAAD,CAA/B,CAAZ,EAA0D;;AAC1D,YAAIA,MAAM,CAAC,WAAD,CAAN,CAAoBC,MAApB,CAA2BD,MAAM,CAAC,UAAD,CAAjC,EAA+CE,WAA/C,GAA6DC,OAA7D,CAAqEL,SAAS,CAACI,WAAV,EAArE,MAAkG,CAAC,CAAvG,EAA0G;AACxGH,UAAAA,MAAM,CAACK,IAAP,CAAYJ,MAAZ;AACD;AACF;AAPiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQlC,WAAOD,MAAP;AACD,GATD;;AAUA,MAAMM,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAc;AAChC,QAAIP,MAAM,GAAG,EAAb;AADgC;AAAA;AAAA;;AAAA;AAEhC,4BAAqBJ,MAArB,mIAA6B;AAAA,YAAlBK,MAAkB;AAC3B,YAAGA,MAAM,IAAG,CAACA,MAAM,CAAC,KAAD,CAAnB,EAA6B;;AAC7B,YAAIA,MAAM,CAAC,KAAD,CAAN,CAAcG,OAAd,CAAsBG,QAAtB,MAAoC,CAAC,CAAzC,EAA4C;AAC1CP,UAAAA,MAAM,CAACK,IAAP,CAAYJ,MAAZ;AACD;AACF;AAP+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQhC,WAAOD,MAAP;AACD,GATD;;AAUA,UAAQH,IAAR;AACE,SAAK,MAAL;AACE,aAAOC,YAAP;;AACF,SAAK,KAAL;AACE,aAAOQ,WAAP;AAJJ;AAMD,CA3BD;;AA6BA,eAAeX,MAAf","sourcesContent":["\nconst filter = (target, type) => {\n  const filterByName = (inputName) => {\n    let result = []\n    for (const person of target) {\n      if(person&& !(person[\"firstName\"] && person[\"lastName\"])) return \n      if (person[\"firstName\"].concat(person[\"lastName\"]).toUpperCase().indexOf(inputName.toUpperCase()) !== -1) {\n        result.push(person)\n      }\n    }\n    return result\n  }\n  const filterByTag = (inputTag) => {\n    let result = []\n    for (const person of target) {\n      if(person&& !person[\"tag\"] ) return \n      if (person[\"tag\"].indexOf(inputTag) !== -1) {\n        result.push(person)\n      }\n    }\n    return result\n  }\n  switch (type) {\n    case \"name\":\n      return filterByName;\n    case \"tag\":\n      return filterByTag;\n  }\n}\n\nexport default filter"]},"metadata":{},"sourceType":"module"}